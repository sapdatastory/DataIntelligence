
1. How to install without internet?

pip download yourpackage

pip install "path/yourpackage.tar.gz"
OR
pip install "path/yourpackage-version.whl"

2. External Python Packages with No Internet Connection
your customer needs to download the python modules and package them into a custom Dockerfile in DI.
For this it is sufficient to upload the modules next to the Dockerfile and include them with e.g.

[Dockerfile]
ADD mymodule-0.2.10.tar.gz /tmp/
RUN python3.6 -m pip install --no-cache-dir --user /tmp/mymodule-0.2.10


3. installing python packages without internet and using source code as .tar.gz and .whl

we are trying to install couple of python packages without internet.
For ex : python-keystoneclient
For that we have the packages downloaded from https://pypi.python.org/pypi/python-keystoneclient/1.7.1 and kept it in server.

This is how I handle this case:
On the machine where I have access to Internet:
mkdir keystone-deps
pip download python-keystoneclient -d "/home/aviuser/keystone-deps"
tar cvfz keystone-deps.tgz keystone-deps

Then move the tar file to the destination machine that does not have Internet access and perform the following:
tar xvfz keystone-deps.tgz
cd keystone-deps
pip install python_keystoneclient-2.3.1-py2.py3-none-any.whl -f ./ --no-index

You may need to add --no-deps to the command as follows:
pip install python_keystoneclient-2.3.1-py2.py3-none-any.whl -f ./ --no-index --no-deps


If you want to install a bunch of dependencies from, say a requirements.txt, you would do:
mkdir dependencies
pip download -r requirements.txt -d "./dependencies"
tar cvfz dependencies.tar.gz dependencies

And, once you transfer the dependencies.tar.gz to the machine which does not have internet you would do:
tar zxvf dependencies.tar.gz
cd dependencies
pip install * -f ./ --no-index
